{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/Desktop/xheck/seesim/lib/supabase/server.ts"],"sourcesContent":["import { cookies } from \"next/headers\";\nimport { createServerClient } from \"@supabase/ssr\";\n\nexport function createSupabaseServer() {\n  const cookieStore: any = cookies() as any;\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value;\n        },\n      },\n    }\n  );\n}\n\nexport async function getServerSession() {\n  const supabase = createSupabaseServer();\n  const {\n    data: { session },\n  } = await supabase.auth.getSession();\n  return session ?? null;\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAAA;;;AAEO,SAAS;IACd,MAAM,cAAmB,IAAA,sJAAO;IAChC,OAAO,IAAA,iMAAkB,sUAGvB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;QACF;IACF;AAEJ;AAEO,eAAe;IACpB,MAAM,WAAW;IACjB,MAAM,EACJ,MAAM,EAAE,OAAO,EAAE,EAClB,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;IAClC,OAAO,WAAW;AACpB","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/Desktop/xheck/seesim/app/api/compare/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { createSupabaseServer } from \"@/lib/supabase/server\";\n\nexport async function POST(req: Request) {\n  const supabase = createSupabaseServer();\n  const {\n    data: { user },\n  } = await supabase.auth.getUser();\n  if (!user) return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n\n  const { prompt, image, selected_ids } = await req.json();\n  if (!prompt || typeof prompt !== \"string\") {\n    return NextResponse.json({ error: \"Invalid prompt\" }, { status: 400 });\n  }\n\n  const { data: llms, error } = await supabase\n    .from(\"llms\")\n    .select(\"id, model_name, nickname, api_key\")\n    .order(\"created_at\", { ascending: false });\n  if (error) return NextResponse.json({ error: error.message }, { status: 500 });\n\n  const selected: string[] | null = Array.isArray(selected_ids) ? selected_ids : null;\n  const toUse = selected && selected.length ? (llms ?? []).filter((l) => selected.includes((l as any).id)) : (llms ?? []);\n\n  const appUrl = process.env.NEXT_PUBLIC_SITE_URL || process.env.NEXT_PUBLIC_VERCEL_URL || \"http://localhost:3000\";\n\n  // If image is a data URL, upload to Supabase Storage and use public URL\n  let imageUrl: string | null = null;\n  if (typeof image === \"string\" && image.startsWith(\"data:\")) {\n    try {\n      const matches = image.match(/^data:(.*?);base64,(.*)$/);\n      if (matches) {\n        const contentType = matches[1] || \"application/octet-stream\";\n        const base64 = matches[2];\n        const buffer = Buffer.from(base64, \"base64\");\n        const path = `attachments/${Date.now()}_${Math.random().toString(36).slice(2)}.jpg`;\n        const { error: upErr } = await supabase.storage\n          .from(\"attachments\")\n          .upload(path, buffer, { contentType, cacheControl: \"3600\", upsert: false });\n        if (!upErr) {\n          const { data } = supabase.storage.from(\"attachments\").getPublicUrl(path);\n          imageUrl = data?.publicUrl || null;\n        }\n      }\n    } catch (e) {\n      imageUrl = null; // fallback to sending original image below\n    }\n  } else if (typeof image === \"string\") {\n    imageUrl = image; // already a URL\n  }\n\n  const PRIMARY_TIMEOUT_MS = 60000; // 25s primary\n  const RETRY_TIMEOUT_MS = 12000; // 12s retry\n  const RETRY_DELAY_MS = 60000; // wait 60s before retry\n  // Use model defaults (omit max_tokens)\n  const PRIMARY_MAX_TOKENS: number | undefined = undefined;\n  const RETRY_MAX_TOKENS: number | undefined = undefined;\n\n  async function requestOnce(l: any, maxTokens: number | undefined, timeoutMs: number): Promise<{ id: string; model_name: string; nickname: string; content: string }>{\n    const apiKey = (l as any).api_key as string;\n    const controller = new AbortController();\n    const timeout = setTimeout(() => controller.abort(), timeoutMs);\n    try {\n      const res = await fetch(\"https://openrouter.ai/api/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${apiKey}`,\n          // Recommended by OpenRouter to improve acceptance/rate limits\n          \"HTTP-Referer\": appUrl,\n          Referer: appUrl,\n          \"X-Title\": \"Seesim\",\n        },\n        body: JSON.stringify((() => {\n          const payload: any = {\n            model: l.model_name,\n            temperature: 0.7,\n            messages: [\n              { role: \"system\", content: \"You are a helpful assistant.\" },\n              imageUrl\n                ? {\n                    role: \"user\",\n                    content: [\n                      { type: \"text\", text: prompt },\n                      { type: \"image_url\", image_url: { url: imageUrl } },\n                    ],\n                  }\n                : { role: \"user\", content: prompt },\n            ],\n          };\n          if (typeof maxTokens === \"number\" && maxTokens > 0) {\n            payload.max_tokens = maxTokens;\n          }\n          return payload;\n        })()),\n        signal: controller.signal,\n      });\n      if (!res.ok) {\n        // Try to parse JSON error; fallback to text\n        let errText = \"\";\n        try {\n          const j = await res.json();\n          errText = j?.error?.message || j?.message || JSON.stringify(j);\n        } catch {\n          errText = await res.text();\n        }\n        if (imageUrl) {\n          const lower = (errText || \"\").toLowerCase();\n          if (lower.includes(\"image\") || lower.includes(\"vision\") || res.status === 400) {\n            throw new Error(\"This LLM does not support file upload\");\n          }\n        }\n        throw new Error(errText || `OpenRouter error ${res.status}`);\n      }\n      const json = await res.json();\n      const choices = json?.choices;\n      if (!Array.isArray(choices) || !choices.length) {\n        throw new Error(`No choices in response: ${JSON.stringify(json)}`);\n      }\n      const content = choices[0]?.message?.content ?? \"\";\n      if (!content) {\n        throw new Error(`Empty content in response: ${JSON.stringify(json)}`);\n      }\n      return { id: l.id, model_name: l.model_name, nickname: l.nickname, content };\n    } catch (err: any) {\n      const msg = String(err?.message || err);\n      if (controller.signal.aborted || /AbortError/i.test(msg)) {\n        throw new Error(`Timed out after ${Math.round(timeoutMs / 1000)}s`);\n      }\n      throw err;\n    } finally {\n      clearTimeout(timeout);\n    }\n  }\n  const results = await Promise.allSettled(\n    toUse.map(async (l) => {\n      try {\n        // Primary attempt\n        return await requestOnce(l, PRIMARY_MAX_TOKENS, PRIMARY_TIMEOUT_MS);\n      } catch (err: any) {\n        const msg = String(err?.message || err);\n        // Retry only on timeouts/overload/5xx-like errors\n        if (/timed out/i.test(msg) || /abort/i.test(msg) || /overload|rate|capacity|gateway|timeout/i.test(msg)) {\n          await new Promise((r) => setTimeout(r, RETRY_DELAY_MS));\n          try {\n            return await requestOnce(l, RETRY_MAX_TOKENS, RETRY_TIMEOUT_MS);\n          } catch (e2) {\n            throw e2;\n          }\n        }\n        throw err;\n      }\n    })\n  );\n\n  const response = results.map((r, idx) => {\n    const l = (toUse as any[])[idx] || {};\n    if (r.status === \"fulfilled\") {\n      return { ...r.value, status: \"success\" };\n    }\n    return {\n      id: l.id,\n      model_name: l.model_name,\n      nickname: l.nickname,\n      status: \"error\",\n      error: String((r as any).reason),\n    } as any;\n  });\n\n  return NextResponse.json({ results: response });\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}