{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/Desktop/xheck/seesim/lib/supabase/server.ts"],"sourcesContent":["import { cookies } from \"next/headers\";\nimport { createServerClient } from \"@supabase/ssr\";\n\nexport function createSupabaseServer() {\n  const cookieStore: any = cookies() as any;\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value;\n        },\n      },\n    }\n  );\n}\n\nexport async function getServerSession() {\n  const supabase = createSupabaseServer();\n  const {\n    data: { session },\n  } = await supabase.auth.getSession();\n  return session ?? null;\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAAA;;;AAEO,SAAS;IACd,MAAM,cAAmB,IAAA,sJAAO;IAChC,OAAO,IAAA,iMAAkB,sUAGvB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;QACF;IACF;AAEJ;AAEO,eAAe;IACpB,MAAM,WAAW;IACjB,MAAM,EACJ,MAAM,EAAE,OAAO,EAAE,EAClB,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;IAClC,OAAO,WAAW;AACpB","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/Desktop/xheck/seesim/app/api/llms/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { z } from \"zod\";\nimport { createSupabaseServer } from \"@/lib/supabase/server\";\n\n// Normalize various paste formats from OpenRouter into a slug like\n// provider/model[:variant] (e.g., google/gemma-3-1-4-it:free)\nfunction normalizeOpenRouterSlug(input: string): string {\n  let s = (input || \"\").trim();\n  // If a URL is pasted, extract the last path segment\n  try {\n    if (/^https?:\\/\\//i.test(s)) {\n      const u = new URL(s);\n      const parts = u.pathname.split(\"/\").filter(Boolean);\n      const maybeModelsIdx = parts.findIndex((p) => p.toLowerCase() === \"models\");\n      if (maybeModelsIdx !== -1 && parts[maybeModelsIdx + 1]) {\n        s = parts[maybeModelsIdx + 1];\n      } else {\n        s = parts.pop() || s;\n      }\n    }\n  } catch {\n    // ignore URL parsing errors, fallback to raw string\n  }\n  const m = s.match(/[A-Za-z0-9._-]+\\/[A-Za-z0-9._-]+(?::[A-Za-z0-9._-]+)?/);\n  if (m) s = m[0];\n  return s.toLowerCase();\n}\n\nconst PatchSchema = z.object({\n  model_name: z.string().min(1).optional(),\n  api_key: z.string().min(1).optional(),\n  nickname: z.string().optional().nullable(),\n});\n\nexport async function PATCH(\n  req: Request,\n  { params }: { params: { id: string } }\n) {\n  const supabase = createSupabaseServer();\n  const {\n    data: { user },\n  } = await supabase.auth.getUser();\n  if (!user) return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n\n  const json = await req.json();\n  const parsed = PatchSchema.safeParse(json);\n  if (!parsed.success) return NextResponse.json({ error: parsed.error.flatten() }, { status: 400 });\n\n  const updates: any = {};\n  if (parsed.data.model_name) updates.model_name = normalizeOpenRouterSlug(parsed.data.model_name);\n  if (parsed.data.nickname !== undefined) updates.nickname = parsed.data.nickname;\n  if (parsed.data.api_key) updates.api_key = parsed.data.api_key;\n\n  const { data, error } = await supabase\n    .from(\"llms\")\n    .update(updates)\n    .eq(\"id\", params.id)\n    .select(\"id, user_id, model_name, nickname, created_at\")\n    .single();\n  if (error) return NextResponse.json({ error: error.message }, { status: 500 });\n  return NextResponse.json({ llm: data });\n}\n\nexport async function DELETE(\n  _req: Request,\n  { params }: { params: { id: string } }\n) {\n  const supabase = createSupabaseServer();\n  const {\n    data: { user },\n  } = await supabase.auth.getUser();\n  if (!user) return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n\n  const { error, count } = await supabase\n    .from(\"llms\")\n    .delete({ count: \"exact\" })\n    .eq(\"id\", params.id)\n    .eq(\"user_id\", user.id);\n  if (error) return NextResponse.json({ error: error.message }, { status: 500 });\n  if (!count) return NextResponse.json({ error: \"Not found\" }, { status: 404 });\n  return NextResponse.json({ ok: true }, { status: 200 });\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAEA,mEAAmE;AACnE,8DAA8D;AAC9D,SAAS,wBAAwB,KAAa;IAC5C,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI;IAC1B,oDAAoD;IACpD,IAAI;QACF,IAAI,gBAAgB,IAAI,CAAC,IAAI;YAC3B,MAAM,IAAI,IAAI,IAAI;YAClB,MAAM,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC;YAC3C,MAAM,iBAAiB,MAAM,SAAS,CAAC,CAAC,IAAM,EAAE,WAAW,OAAO;YAClE,IAAI,mBAAmB,CAAC,KAAK,KAAK,CAAC,iBAAiB,EAAE,EAAE;gBACtD,IAAI,KAAK,CAAC,iBAAiB,EAAE;YAC/B,OAAO;gBACL,IAAI,MAAM,GAAG,MAAM;YACrB;QACF;IACF,EAAE,OAAM;IACN,oDAAoD;IACtD;IACA,MAAM,IAAI,EAAE,KAAK,CAAC;IAClB,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE;IACf,OAAO,EAAE,WAAW;AACtB;AAEA,MAAM,cAAc,oLAAC,CAAC,MAAM,CAAC;IAC3B,YAAY,oLAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ;IACtC,SAAS,oLAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ;IACnC,UAAU,oLAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ;AAC1C;AAEO,eAAe,MACpB,GAAY,EACZ,EAAE,MAAM,EAA8B;IAEtC,MAAM,WAAW,IAAA,6JAAoB;IACrC,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACf,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IAC/B,IAAI,CAAC,MAAM,OAAO,0JAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAe,GAAG;QAAE,QAAQ;IAAI;IAE7E,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,MAAM,SAAS,YAAY,SAAS,CAAC;IACrC,IAAI,CAAC,OAAO,OAAO,EAAE,OAAO,0JAAY,CAAC,IAAI,CAAC;QAAE,OAAO,OAAO,KAAK,CAAC,OAAO;IAAG,GAAG;QAAE,QAAQ;IAAI;IAE/F,MAAM,UAAe,CAAC;IACtB,IAAI,OAAO,IAAI,CAAC,UAAU,EAAE,QAAQ,UAAU,GAAG,wBAAwB,OAAO,IAAI,CAAC,UAAU;IAC/F,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,WAAW,QAAQ,QAAQ,GAAG,OAAO,IAAI,CAAC,QAAQ;IAC/E,IAAI,OAAO,IAAI,CAAC,OAAO,EAAE,QAAQ,OAAO,GAAG,OAAO,IAAI,CAAC,OAAO;IAE9D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,QACL,MAAM,CAAC,SACP,EAAE,CAAC,MAAM,OAAO,EAAE,EAClB,MAAM,CAAC,iDACP,MAAM;IACT,IAAI,OAAO,OAAO,0JAAY,CAAC,IAAI,CAAC;QAAE,OAAO,MAAM,OAAO;IAAC,GAAG;QAAE,QAAQ;IAAI;IAC5E,OAAO,0JAAY,CAAC,IAAI,CAAC;QAAE,KAAK;IAAK;AACvC;AAEO,eAAe,OACpB,IAAa,EACb,EAAE,MAAM,EAA8B;IAEtC,MAAM,WAAW,IAAA,6JAAoB;IACrC,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACf,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IAC/B,IAAI,CAAC,MAAM,OAAO,0JAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAe,GAAG;QAAE,QAAQ;IAAI;IAE7E,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,SAC5B,IAAI,CAAC,QACL,MAAM,CAAC;QAAE,OAAO;IAAQ,GACxB,EAAE,CAAC,MAAM,OAAO,EAAE,EAClB,EAAE,CAAC,WAAW,KAAK,EAAE;IACxB,IAAI,OAAO,OAAO,0JAAY,CAAC,IAAI,CAAC;QAAE,OAAO,MAAM,OAAO;IAAC,GAAG;QAAE,QAAQ;IAAI;IAC5E,IAAI,CAAC,OAAO,OAAO,0JAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAY,GAAG;QAAE,QAAQ;IAAI;IAC3E,OAAO,0JAAY,CAAC,IAAI,CAAC;QAAE,IAAI;IAAK,GAAG;QAAE,QAAQ;IAAI;AACvD","debugId":null}}]
}